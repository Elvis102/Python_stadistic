Traceback (most recent call last):
  File "/Users/ethan/opt/miniconda3/envs/pythonbook/lib/python3.10/site-packages/jupyter_cache/executors/utils.py", line 51, in single_nb_execution
    executenb(
  File "/Users/ethan/opt/miniconda3/envs/pythonbook/lib/python3.10/site-packages/nbclient/client.py", line 1204, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/Users/ethan/opt/miniconda3/envs/pythonbook/lib/python3.10/site-packages/nbclient/util.py", line 84, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/Users/ethan/opt/miniconda3/envs/pythonbook/lib/python3.10/site-packages/nbclient/util.py", line 62, in just_run
    return loop.run_until_complete(coro)
  File "/Users/ethan/opt/miniconda3/envs/pythonbook/lib/python3.10/asyncio/base_events.py", line 646, in run_until_complete
    return future.result()
  File "/Users/ethan/opt/miniconda3/envs/pythonbook/lib/python3.10/site-packages/nbclient/client.py", line 663, in async_execute
    await self.async_execute_cell(
  File "/Users/ethan/opt/miniconda3/envs/pythonbook/lib/python3.10/site-packages/nbclient/client.py", line 965, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/Users/ethan/opt/miniconda3/envs/pythonbook/lib/python3.10/site-packages/nbclient/client.py", line 862, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
import numpy as np                                                              
import seaborn as sns                                                           
from scipy import stats                                                         
import matplotlib.pyplot as plt

# load some data
pathin = '/Users/ethan/Documents/GitHub/pythonbook/Data/'
file1 = 'kurtosisdata.csv'
file2 = 'kurtosisdata_ncurve.csv'

cd(pathin)

df_kurtosis = pd.read_csv(file1)

# define a normal distribution with a mean of 0 and a standard deviation of 1
mu = 0
sigma = 1
x = np.linspace(mu - 3*sigma, mu + 3*sigma, 100)
y = stats.norm.pdf(x, mu, sigma)

platykurtic = df_kurtosis.loc[df_kurtosis["Kurtosis"] == "Platykurtic"]
mesokurtic = df_kurtosis.loc[df_kurtosis["Kurtosis"] == "Mesokurtic"]
leptokurtic = df_kurtosis.loc[df_kurtosis["Kurtosis"] == "Leptokurtic"]


fig, axes = plt.subplots(1, 3, figsize=(15, 5))

ax1 = sns.histplot(data=platykurtic, x = "Values", binwidth=.5, ax=axes[0])
ax2 = sns.histplot(data=mesokurtic, x = "Values", binwidth=.5,  ax=axes[1])
ax3 = sns.histplot(data=leptokurtic, x = "Values", binwidth=.5, ax=axes[2])



#ax2 = ax.twinx()
sns.lineplot(x=x,y=y*40000, ax=ax1, color='black')
sns.lineplot(x=x,y=y*40000, ax=ax2, color='black')
sns.lineplot(x=x,y=y*40000, ax=ax3, color='black')


axes[0].set_title("Platykurtic\n\"too flat\"")
axes[1].set_title("Mesokurtic\n\"just right\"")
axes[2].set_title("Leptokurtic\n\"too pointy\"")

for ax in axes:
    ax.set_xlim(-6,6)
    ax.set_ylim(0,25000)
    ax.spines['right'].set_visible(False)
    ax.spines['top'].set_visible(False)



# Again just ignore. This line is just here for the sake of figure captions and links.
glue("kurtosis_fig", ax, display=False)
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mNameError[0m                                 Traceback (most recent call last)
Input [0;32mIn [39][0m, in [0;36m<cell line: 53>[0;34m()[0m
[1;32m     48[0m     ax[38;5;241m.[39mspines[[38;5;124m'[39m[38;5;124mtop[39m[38;5;124m'[39m][38;5;241m.[39mset_visible([38;5;28;01mFalse[39;00m)
[1;32m     52[0m [38;5;66;03m# Again just ignore. This line is just here for the sake of figure captions and links.[39;00m
[0;32m---> 53[0m [43mglue[49m([38;5;124m"[39m[38;5;124mkurtosis_fig[39m[38;5;124m"[39m, ax, display[38;5;241m=[39m[38;5;28;01mFalse[39;00m)

[0;31mNameError[0m: name 'glue' is not defined
NameError: name 'glue' is not defined

